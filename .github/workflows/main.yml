name: GameCI Actions 🎮

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  checks: write

jobs:        
  testRunner:
    name: Test for ${{ matrix.testMode }} ✨
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - EditMode
          - PlayMode
    steps:
      # Checkout
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1

      # Git LFS
      - name: Create LFS File List
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
        
      - name: Restore LFS Cache
        uses: actions/cache@v4.0.0
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
          
      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
          
      # Cache
      - name: Cached Restored
        uses: actions/cache@v4.0.0
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-test-project-
            Library-
      # Test
      - name: Run Tests
        uses: game-ci/unity-test-runner@v4
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          testMode: ${{ matrix.testMode }}
          checkName: ${{ matrix.testMode }} Test Results
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          
      # Output
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: Test Results (${{ matrix.testMode }})
          path: ${{ steps.testRunner.outputs.artifactsPath }}
          
  buildWebGL:
    needs: testRunner
    name: Build For WebGL 🌐
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      # Checkout
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
        
      # Git LFS
      - name: Create LFS File List
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
        
      - name: Restore LFS cache
        uses: actions/cache@v4.0.0
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
          
      # Cache
      - name: Cached Restored
        uses: actions/cache@v4.0.0
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-build-
            Library-
          
      # Build
      - name: Build WebGL
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL

      # Output
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: Build-WebGL
          path: build/WebGL
          
  buildWindows:
    needs: testRunner
    name: Build For Windows 🖥️
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      # Checkout
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
        
      # Git LFS
      - name: Create LFS File List
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
        
      - name: Restore LFS cache
        uses: actions/cache@v4.0.0
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
          
      # Cache
      - name: Cached Restored
        uses: actions/cache@v4.0.0
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-build-
            Library-
          
      # Build
      - name: Build Windows Standalone
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows64

      # Output
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: Build-StandaloneWindows64
          path: build/StandaloneWindows64
          
  buildAndroid:
    needs: testRunner
    name: Build for Android 📱
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      # Free Up Disk Space
      - name: Free Up Space For Android
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h
      # Checkout
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
        
      # Git LFS
      - name: Create LFS File List
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
        
      - name: Restore LFS cache
        uses: actions/cache@v4.0.0
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
          
      # Cache
      - name: Cached Restored
        uses: actions/cache@v4.0.0
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-build-
            Library-
      # Build   
      - name: Build Android
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: Android

      # Output
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: Build-Android
          path: build/Android/Android.apk
          
  deployPages:
    needs: buildWebGL
    name: Deploy To Github Pages 🚀
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
          
      # Get WebGL Build Cache
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.1.3
        with:
          name: Build-WebGL
          path: build
          
      # Deploy
      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: github-pages
          folder: build/WebGL
          